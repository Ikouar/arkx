// Secured Node.js and Express server with input validation and sanitization
const express = require('express');
const app = express();
const mysql = require('mysql');
const escapeHtml = require('escape-html');
const { body, validationResult } = require('express-validator');

// Simulated database object
let database = {};
////////
app.get('/', function(req, res){
    // Rendering user input directly, leading to XSS vulnerability
    res.send('<html><body><h1>' + req.query.userInput + '</h1></body></html>');});
///////
    app.get('/', function(req, res){
        // Escaping user input to prevent XSS
        res.send('<html><body><h1>' + escapeHtml(req.query.userInput) + '</h1></body></html>');
});

///////
app.post('/submit-form', 
body('username').isLength({ min: 5 }).trim().escape(), 
(req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
return res.status(400).json({ errors: errors.array() });
    }
    // User input is validated and sanitized
    let username = req.body.username;
    let email = req.body.email;
    
    // Simulating saving data to a 'database'
    database[email] = { email };
    database[username] = { username};
    res.send(`User ${username} registered with email ${email}`);
});




// Assume 'connection' is a valid MySQL connection object

function login(username, password) {
  const query = 'SELECT * FROM users WHERE username = ? AND password = ?';
const values = [username, password];

return new Promise((resolve, reject) => {
    connection.query(query, values, (error, results) => {
    if (error) {
        reject(error);
    } else {
        resolve(results);
    }
    });
});
}

// Usage
login('admin', 'password')
.then((results) => {
    console.log(results);
})
.catch((error) => {
    console.error(error);
});

///
app.listen(3000, () => console.log('Server running on port 3000'));
